version: "2"
services:
  echo-redis:
    ports:
      - "8080:80"
    expose:
      - "80"
      - "5000"
    networks:
      envoy-tcp-proxy:
        ipv4_address: 172.18.0.2
    restart: always
    environment:
      ECHO_PORT: 5000
      HTTP_PORT: 80
      REDIS_CLUSTER: "false"
      REDIS_HOST: 172.18.0.3:6379
      REDIS_RETRY: -1
      REDIS_IDLE_TIMEOUT: 5
    image: zufardhiyaulhaq/echo-redis:49dc0e6
  echo-redis-tcpdump:
    network_mode: service:echo-redis
    restart: always
    image: nicolaka/netshoot
    volumes:
      - ./network_dump:/tmp/network_dump/
    command: tcpdump -i eth0 port 80 or port 6379 -w /tmp/network_dump/echo-redis.pcapng
  envoy:
    build: .
    expose:
      - "6379"
    networks:
      envoy-tcp-proxy:
        ipv4_address: 172.18.0.3
    restart: always
    volumes:
      - ./envoy.yaml:/etc/config.yaml
  envoy-tcpdump:
    network_mode: service:envoy
    restart: always
    image: nicolaka/netshoot
    volumes:
      - ./network_dump:/tmp/network_dump/
    command: tcpdump -i eth0 port 6379 -w /tmp/network_dump/envoy.pcapng
  aws:
    build: .
    expose:
      - "6379"
    networks:
      envoy-tcp-proxy:
        ipv4_address: 172.18.0.4
    restart: always
    volumes:
      - ./aws.yaml:/etc/config.yaml
  aws-tcpdump:
    network_mode: service:aws
    restart: always
    image: nicolaka/netshoot
    volumes:
      - ./network_dump:/tmp/network_dump/
    command: tcpdump -i eth0 port 6379 -w /tmp/network_dump/aws.pcapng
  redis:
    expose:
      - "6379"
    networks:
      envoy-tcp-proxy:
        ipv4_address: 172.18.0.5
    restart: always
    image: redis:latest
  redis-tcpdump:
    network_mode: service:redis
    restart: always
    image: nicolaka/netshoot
    volumes:
      - ./network_dump:/tmp/network_dump/
    command: tcpdump -i eth0 port 6379 -w /tmp/network_dump/redis.pcapng
networks:
  envoy-tcp-proxy:
    driver: bridge
    ipam:
     config:
       - subnet: 172.18.0.0/16
         gateway: 172.18.0.1
